////////////////////////////////////////////////////////////////////////////////
// This code contains NVIDIA Confidential Information and is disclosed
// under the Mutual Non-Disclosure Agreement.
//
// Notice
// ALL NVIDIA DESIGN SPECIFICATIONS AND CODE ("MATERIALS") ARE PROVIDED "AS IS"
// NVIDIA MAKES NO REPRESENTATIONS, WARRANTIES, EXPRESSED, IMPLIED, STATUTORY,
// OR OTHERWISE WITH RESPECT TO THE MATERIALS, AND EXPRESSLY DISCLAIMS ANY
// IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A
// PARTICULAR PURPOSE.
//
// NVIDIA Corporation assumes no responsibility for the consequences of use of
// such information or for any infringement of patents or other rights of third
// parties that may result from its use. No license is granted by implication or
// otherwise under any patent or patent rights of NVIDIA Corporation. No third
// party distribution is allowed unless expressly authorized by NVIDIA.  Details
// are subject to change without notice. This code supersedes and replaces all
// information previously supplied. NVIDIA Corporation products are not
// authorized for use as critical components in life support devices or systems
// without express written approval of NVIDIA Corporation.
//
// Copyright (c) 2022 NVIDIA Corporation. All rights reserved.
//
// NVIDIA Corporation and its licensors retain all intellectual property and
// proprietary rights in and to this software and related documentation and any
// modifications thereto. Any use, reproduction, disclosure or distribution of
// this software and related documentation without an express license agreement
// from NVIDIA Corporation is strictly prohibited.
//
////////////////////////////////////////////////////////////////////////////////
#ifndef DW_RIG_COORDINATESYSTEM_H_
#define DW_RIG_COORDINATESYSTEM_H_
// Generated by dwProto from coordinate_system.proto DO NOT EDIT BY HAND!
// See //3rdparty/shared/dwproto/README.md for more information

/**
 * @file
 * <b>NVIDIA DriveWorks API: Coordinate Systems</b>
 *
 * @b Description: This file defines the coordinate systems used by DriveWorks APIs.
 *
 * @defgroup coordinate_systems_group DriveWorks Coordinate Systems
 * @{
 */

#include <dw/core/base/Types.h>

#ifdef __cplusplus
extern "C" {
#endif

///
/// @brief Coordinate systems.
///
/// This enumeration defines the coordinate systems used across DriveWorks. Coordinate systems are
/// described by an axis system and origin point.
///
typedef enum dwCoordinateSystem {
    /// Default enum value indicating an undefined coordinate system.
    DW_COORDINATE_SYSTEM_UNDEFINED = 0,

    /// DW_COORDINATE_SYSTEM_VEHICLE_BASE is the vehicle coordinate system attached to the primary body
    /// supported by suspension. The axis system is fixed in the body such that, at rest on horizontal
    /// ground, the X axis is horizontal, parallel to the vehicle's longitudinal plane of symmetry and
    /// pointing forwards. The Y axis is horizontal, perpendicular to the X axis and pointing to the left,
    /// and the Z axis is vertical, perpendicular to both X and Y and pointing upwards. The origin is
    /// fixed in the body and defined as the mid-point of the (virtual) rear-axle projected onto ground.
    /// \note Definition similar to ISO/CD 23150:2019E(3.7.17) "vehicle rear axle coordinate system",
    ///       with the difference that the origin point is offset vertically (at road level at rest).
    /// \note See also ISO 8855:2011(2.10, 2.12) "vehicle axis system", "vehicle reference point".
    /// \note In a passenger car configuration, DW_COORDINATE_SYSTEM_VEHICLE_BASE refers to the car body,
    ///       in which case it is often referred to as the "rig" coordinate system.
    /// \note In a truck configuration, DW_COORDINATE_SYSTEM_VEHICLE_BASE refers to the tractor chassis.
    DW_COORDINATE_SYSTEM_VEHICLE_BASE = 1,

    /// DW_COORDINATE_SYSTEM_VEHICLE_CABIN is the coordinate system attached to the cabin body suspended
    /// above the primary vehicle body (DW_COORDINATE_SYSTEM_VEHICLE_BASE). The axis system is fixed in
    /// the body such that, at rest on horizontal ground, the X axis is horizontal, parallel to the
    /// cabin's longitudinal plane of symmetry and pointing forwards. The Y axis is horizontal,
    /// perpendicular to the X axis and pointing to the left, and the Z axis is vertical, perpendicular
    /// to both X and Y and pointing upwards. The origin is fixed in the body and defined the same as
    /// DW_COORDINATE_SYSTEM_VEHICLE_BASE.
    /// \note See ISO8855:2011(2.18, 2.19) "cab axis system", "cab coordinate system".
    /// \note DW_COORDINATE_SYSTEM_VEHICLE_CABIN only applies to vehicles with a suspended cabin.
    DW_COORDINATE_SYSTEM_VEHICLE_CABIN = 2,

    /// DW_COORDINATE_SYSTEM_VEHICLE_TRAILER is the coordinate system attached to each of the vehicle
    /// units towed by a leading vehicle. Axis systems and origins are defined by the same logic as
    /// applied for DW_COORDINATE_SYSTEM_VEHICLE_BASE.
    /// \note See ISO8855:2011(3,1, 3.2) "vehicle unit", "trailer".
    DW_COORDINATE_SYSTEM_VEHICLE_TRAILER = 3,

    /// DW_COORDINATE_SYSTEM_ROADPLANE is the coordinate system attached to the plane approximating
    /// the surface supporting the primary vehicle unit. The road plane is defined by the front tire
    /// contact patches and the projection of the rear-axle midpoint onto the road surface. The axis
    /// system is fixed in the plane such that X and Y are aligned with the projection onto the plane
    /// of axes X and Y of the primary vehicle unit (DW_COORDINATE_SYSTEM_VEHICLE_BASE). The Z axis
    /// is perpendicular to the plane and pointing upwards. The road plane origin is defined by the
    /// projection of the rear-axle midpoint onto the road surface.
    /// \note Definition compatible with ISO23150:2019E(3.7.8) "road plane".
    DW_COORDINATE_SYSTEM_ROADPLANE = 4,

    /// DW_COORDINATE_SYSTEM_LOCAL is a local coordinate system with origin at an arbitrary point in
    /// the world. Origin and axis are typically defined by the vehicle position and heading at a
    /// particular point in time, e.g. at initialization.
    DW_COORDINATE_SYSTEM_LOCAL = 5,

    /// DW_COORDINATE_SYSTEM_WORLD is used for map/earth coordinates and is defined by the World
    /// Geodetic System 1984 (WGS84) and East-North-Up (ENU) axis conventions. The origin is defined
    /// at an arbitrary point on the Earth surface. X, Y and Z axes are defined tangent to the globe
    /// at origin point such that (X, Y, Z) corresponds to (East, North, Up).
    DW_COORDINATE_SYSTEM_WORLD = 6,

    /// DW_COORDINATE_SYSTEM_SENSOR is the local coordinate system each sensor uses. The conventions used
    /// in the SDK vary from sensor to sensor.
    DW_COORDINATE_SYSTEM_SENSOR = 7,

    /// DW_COORDINATE_SYSTEM_CUSTOM represents any arbitrary coordinate system that the developer wants
    /// to use.
    DW_COORDINATE_SYSTEM_CUSTOM = 8,
} dwCoordinateSystem;

// This amounts to max(CoordinateSystem) + 1, i.e. the required size of
// an array if these enum values are interpreted as array offsets.
#define DW_COORDINATE_SYSTEM_COUNT 9

#ifdef __cplusplus
}
#endif

/** @}
 */

#endif // DW_RIG_COORDINATESYSTEM_H_
