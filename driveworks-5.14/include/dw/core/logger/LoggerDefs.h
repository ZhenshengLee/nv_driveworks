////////////////////////////////////////////////////////////////////////////////
// This code contains NVIDIA Confidential Information and is disclosed
// under the Mutual Non-Disclosure Agreement.
//
// Notice
// ALL NVIDIA DESIGN SPECIFICATIONS AND CODE ("MATERIALS") ARE PROVIDED "AS IS"
// NVIDIA MAKES NO REPRESENTATIONS, WARRANTIES, EXPRESSED, IMPLIED, STATUTORY,
// OR OTHERWISE WITH RESPECT TO THE MATERIALS, AND EXPRESSLY DISCLAIMS ANY
// IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A
// PARTICULAR PURPOSE.
//
// NVIDIA Corporation assumes no responsibility for the consequences of use of
// such information or for any infringement of patents or other rights of third
// parties that may result from its use. No license is granted by implication or
// otherwise under any patent or patent rights of NVIDIA Corporation. No third
// party distribution is allowed unless expressly authorized by NVIDIA.  Details
// are subject to change without notice. This code supersedes and replaces all
// information previously supplied. NVIDIA Corporation products are not
// authorized for use as critical components in life support devices or systems
// without express written approval of NVIDIA Corporation.
//
// Copyright (c) 2016-2023 NVIDIA Corporation. All rights reserved.
//
// NVIDIA Corporation and its licensors retain all intellectual property and
// proprietary rights in and to this software and related documentation and any
// modifications thereto. Any use, reproduction, disclosure or distribution of
// this software and related documentation without an express license agreement
// from NVIDIA Corporation is strictly prohibited.
//
////////////////////////////////////////////////////////////////////////////////
#ifndef DW_CORE_LOGGER_LOGGERDEFS_H_
#define DW_CORE_LOGGER_LOGGERDEFS_H_
// Generated by dwProto from logger_defs.proto DO NOT EDIT BY HAND!
// See //3rdparty/shared/dwproto/README.md for more information

/**
 * @file
 * <b>NVIDIA DriveWorks API: Core Warp Primitives</b>
 *
 * @b Description: This file defines DW core warp primitives.
 */

/**
 * @defgroup core_logger_group Core Logger
 * @brief Processes wide logger API.
 *
 * Unless explicitly specified, all errors returned by DriveWorks APIs are non recoverable and the user application should transition to fail safe mode.
 * In addition, any error code not described in this documentation should be consider as fatal and the user application should also transition to fail safe mode.
 *
 *
 * @{
 * @ingroup core_group
 */

#include <stdbool.h>
#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

/// @brief Holds the verbosity level.
typedef enum dwLoggerVerbosity {
    DW_LOG_VERBOSE = 0,                     //!< Log everything; default log level
    DW_LOG_DEBUG   = 1 << 12,               //!< Log Debug information
    DW_LOG_INFO    = 1 << 13,               //!< Log Notice information
    DW_LOG_WARN    = (1 << 14) - 4096,      //!< Log Warning information
    DW_LOG_ERROR   = 1 << 14,               //!< Log Error information
    DW_LOG_FATAL   = (1 << 14) + (1 << 12), //!< Log Fatal information which cause premature termination
    DW_LOG_SILENT  = (1 << 15) - 4096,      //!< Log nothing
} dwLoggerVerbosity;

#ifdef __cplusplus
}
#endif

/** @}
 */

#endif // DW_CORE_LOGGER_LOGGERDEFS_H_
