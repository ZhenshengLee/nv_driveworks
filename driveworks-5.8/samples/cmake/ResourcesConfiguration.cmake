################################################################################
#
# Notice
# ALL NVIDIA DESIGN SPECIFICATIONS AND CODE ("MATERIALS") ARE PROVIDED "AS IS"
# NVIDIA MAKES NO REPRESENTATIONS, WARRANTIES, EXPRESSED, IMPLIED, STATUTORY, OR
# OTHERWISE WITH RESPECT TO THE MATERIALS, AND EXPRESSLY DISCLAIMS ANY IMPLIED
# WARRANTIES OF NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR
# PURPOSE.
#
# NVIDIA CORPORATION & AFFILIATES assumes no responsibility for the consequences
# of use of such information or for any infringement of patents or other rights
# of third parties that may result from its use. No license is granted by
# implication or otherwise under any patent or patent rights of NVIDIA
# CORPORATION & AFFILIATES. No third party distribution is allowed unless
# expressly authorized by NVIDIA. Details are subject to change without notice.
# This code supersedes and replaces all information previously supplied. NVIDIA
# CORPORATION & AFFILIATES products are not authorized for use as critical
# components in life support devices or systems without express written approval
# of NVIDIA CORPORATION & AFFILIATES.
#
# SPDX-FileCopyrightText: Copyright (c) 2019-2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-NvidiaProprietary
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related documentation
# and any modifications thereto. Any use, reproduction, disclosure or
# distribution of this material and related documentation without an express
# license agreement from NVIDIA CORPORATION or its affiliates is strictly
# prohibited.
#
################################################################################

#-------------------------------------------------------------------------------
# Set CuDNN and TensorRT version
# TRT_VERSION is cmake command line parameter
#-------------------------------------------------------------------------------

if(DEFINED TRT_VERSION)
    if(VIBRANTE_BUILD)
        if(TRT_VERSION VERSION_EQUAL "6.0.0.11" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "5.1.12.0")
            set(CUDNN_VERSION 7.6.3.8)
            set(DIT_VERSION_STR 06_00_00_11 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_00_00_11)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.2.0.3" AND (VIBRANTE_PDK_VERSION VERSION_EQUAL "5.1.15.0" OR VIBRANTE_PDK_VERSION VERSION_EQUAL "5.1.15.2"))
            set(CUDNN_VERSION 7.6.6.106)
            set(DIT_VERSION_STR 06_02_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_02_00_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.2.0.3" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.0.0")
            set(CUDNN_VERSION 7.6.6.106)
            set(DIT_VERSION_STR 06_02_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_02_00_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.3.1.3" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "5.2.0.0")
            set(CUDNN_VERSION 7.6.6.184)
            set(DIT_VERSION_STR 06_03_01_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_03_01_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.4.0.6" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "5.2.3.0")
            set(CUDNN_VERSION 7.6.6.284)
            set(DIT_VERSION_STR 06_04_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_04_00_06)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.5.0.7" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "5.2.6.0")
            set(CUDNN_VERSION 7.6.6.415)
            set(DIT_VERSION_STR 06_05_00_07 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_05_00_07)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "7.2.1.6" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.0.0")
            set(CUDNN_VERSION 8.0.4.29)
            set(DIT_VERSION_STR 07_02_01_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_07_02_01_06)
            set(REQUIRED_CUDA_VERSION 11.1)
        elseif(TRT_VERSION VERSION_EQUAL "8.1.0.3" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.1.0")
            set(CUDNN_VERSION 8.2.5.19)
            set(DIT_VERSION_STR 08_01_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_03)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.1.0.6" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.1.1")
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_01_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_05)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.6" AND (VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.1.2" OR VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.2.0"))
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_03_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_06)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.10" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.2.0")
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_10 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_10)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.12" AND VIBRANTE_PDK_VERSION VERSION_EQUAL "6.0.2.1")
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_12 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_12)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_GREATER_EQUAL "8.4.10.0" AND VIBRANTE_PDK_VERSION VERSION_GREATER_EQUAL "6.0.3.0")
            set(CUDNN_VERSION 8.2.6.x)
            set(DIT_VERSION_STR 08_04_10_00 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_04_10_00)
            set(REQUIRED_CUDA_VERSION 11.4)
        else()
            message(FATAL_ERROR "Combination of TRT version ${TRT_VERSION} and "
                    "PDK version ${VIBRANTE_PDK_VERSION} not supported")
            return()
        endif()

        message(STATUS "Building with TRT version ${TRT_VERSION} and cudnn version "
                "${CUDNN_VERSION}, pdk version ${VIBRANTE_PDK_VERSION}")
    else()
        if(TRT_VERSION VERSION_EQUAL "6.0.0.11")
            set(CUDNN_VERSION 7.6.3.8)
            set(DIT_VERSION_STR 06_00_00_11 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_00_00_11)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.2.0.3")
            set(CUDNN_VERSION 7.6.6.106)
            set(DIT_VERSION_STR 06_02_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_02_00_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.3.1.3")
            set(CUDNN_VERSION 7.6.6.184)
            set(DIT_VERSION_STR 06_03_01_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_03_01_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.4.0.6")
            set(CUDNN_VERSION 7.6.6.284)
            set(DIT_VERSION_STR 06_04_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_04_00_06)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "6.5.0.7")
            set(CUDNN_VERSION 7.6.6.415)
            set(DIT_VERSION_STR 06_05_00_07 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_05_00_07)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(TRT_VERSION VERSION_EQUAL "7.1.0.5")
            set(CUDNN_VERSION 8.0.0.0)
            set(DIT_VERSION_STR 07_01_00_05 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_07_01_00_05)
            set(REQUIRED_CUDA_VERSION 11.0)
        elseif(TRT_VERSION VERSION_EQUAL "7.2.1.6")
            set(CUDNN_VERSION 8.0.4.29)
            set(DIT_VERSION_STR 07_02_01_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_07_02_01_06)
            set(REQUIRED_CUDA_VERSION 11.1)
        elseif(TRT_VERSION VERSION_EQUAL "8.1.0.3")
            set(CUDNN_VERSION 8.2.5.19)
            set(DIT_VERSION_STR 08_01_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_03)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.1.0.6")
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_01_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_05)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.6")
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_03_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_06)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.10")
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_10 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_10)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_EQUAL "8.3.0.12")
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_12 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_12)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(TRT_VERSION VERSION_GREATER_EQUAL "8.4.10.0")
            set(CUDNN_VERSION 8.2.6.x)
            set(DIT_VERSION_STR 08_04_10_00 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_04_10_00)
            set(REQUIRED_CUDA_VERSION 11.4)
        else()
            message(FATAL_ERROR "TRT version ${TRT_VERSION} is not supported")
            return()
        endif()

        message(STATUS "Building with TRT version ${TRT_VERSION} and "
                "cudnn version ${CUDNN_VERSION}")
    endif()
else()
    if(VIBRANTE_BUILD)
        if(VIBRANTE_PDK_VERSION VERSION_EQUAL 5.1.12.0)
            set(CUDNN_VERSION 7.6.3.8)
            set(DIT_VERSION_STR 06_00_00_11 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_00_00_11)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 5.1.15.0 OR VIBRANTE_PDK_VERSION VERSION_EQUAL 5.1.15.2)
            set(CUDNN_VERSION 7.6.6.106)
            set(DIT_VERSION_STR 06_02_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_02_00_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 5.2.0.0)
            set(CUDNN_VERSION 7.6.6.184)
            set(DIT_VERSION_STR 06_03_01_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_03_01_03)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 5.2.3.0)
            set(CUDNN_VERSION 7.6.6.284)
            set(DIT_VERSION_STR 06_04_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_04_00_06)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 5.2.6.0)
            set(CUDNN_VERSION 7.6.6.415)
            set(DIT_VERSION_STR 06_05_00_07 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_06_05_00_07)
            set(REQUIRED_CUDA_VERSION 10.2)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.0.0)
            set(CUDNN_VERSION 8.0.4.29)
            set(DIT_VERSION_STR 07_02_01_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_07_02_01_06)
            set(REQUIRED_CUDA_VERSION 11.1)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.1.0)
            set(CUDNN_VERSION 8.2.5.19)
            set(DIT_VERSION_STR 08_01_00_03 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_03)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.1.1)
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_01_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_01_00_05)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.1.2 OR VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.2.0)
            set(CUDNN_VERSION 8.2.6.16)
            set(DIT_VERSION_STR 08_03_00_06 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_06)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.2.0)
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_10 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_10)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(VIBRANTE_PDK_VERSION VERSION_EQUAL 6.0.2.1)
            set(CUDNN_VERSION 8.2.6.28)
            set(DIT_VERSION_STR 08_03_00_12 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_03_00_12)
            set(REQUIRED_CUDA_VERSION 11.4)
        elseif(VIBRANTE_PDK_VERSION VERSION_GREATER_EQUAL "6.0.3.0")
            set(CUDNN_VERSION 8.2.6.x)
            set(DIT_VERSION_STR 08_04_10_00 CACHE INTERNAL "")
            set(RESOURCES_VERSION trt_08_04_10_00)
            set(REQUIRED_CUDA_VERSION 11.4)
        else()
            message(FATAL_ERROR "PDK version ${VIBRANTE_PDK_VERSION} is not supported")
            return()
        endif()
    else()
        set(CUDNN_VERSION 8.2.6.x)
        set(DIT_VERSION_STR 08_04_10_00 CACHE INTERNAL "")
        set(RESOURCES_VERSION trt_08_04_10_00)
        set(REQUIRED_CUDA_VERSION 11.4)
    endif()
    message(STATUS "Default - Building with TRT version ${DIT_VERSION_STR} and "
            "cudnn version ${CUDNN_VERSION}")
endif()

# Remove the prefix "DIT_" and create a list
string(REGEX REPLACE "DIT_" "" TRT_VERSION_ALL ${DIT_VERSION_STR})
string(REGEX REPLACE "_" ";" TRT_VERSION_ALL ${TRT_VERSION_ALL})
# Extract TRT sub versions
list(GET TRT_VERSION_ALL 0 TRT_MAJOR)
list(GET TRT_VERSION_ALL 1 TRT_MINOR)
list(GET TRT_VERSION_ALL 2 TRT_PATCH)
list(GET TRT_VERSION_ALL 3 TRT_BUILD)

math(EXPR TRT_VERSION_DECIMAL "${TRT_MAJOR} * 1000000 + \
                               ${TRT_MINOR} * 10000 + \
                               ${TRT_PATCH} * 100 + \
                               ${TRT_BUILD}")

if(${CUDNN_VERSION})
    string(REGEX REPLACE "." ";" CUDNN_VER_LIST ${CUDNN_VERSION})
    list(GET CUDNN_VER_LIST 0 CUDNN_MAJOR)
    list(GET CUDNN_VER_LIST 1 CUDNN_MINOR)
    list(GET CUDNN_VER_LIST 2 CUDNN_PATCH)
    set(CUDNN_VERSION_SHORT "${CUDNN_MAJOR}.${CUDNN_MINOR}.${CUDNN_PATCH}")
endif()

#-------------------------------------------------------------------------------
# Set resources folder and filename
#-------------------------------------------------------------------------------
set(DW_RESOURCES_PARENT_DIR "resources")
set(DW_RESOURCES_DATA_DIR "${RESOURCES_VERSION}")
set(DW_RESOURCES_WEIGHTS_DIR "weights")
set(DW_RESOURCES_OUSTER_LUT_DIR "ouster_lut")
set(DW_RESOURCES_PAK_NAME "resources.pak")
