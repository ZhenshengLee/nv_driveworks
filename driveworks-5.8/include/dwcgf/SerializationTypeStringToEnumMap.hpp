/////////////////////////////////////////////////////////////////////////////////////////
//
// Notice
// ALL NVIDIA DESIGN SPECIFICATIONS AND CODE ("MATERIALS") ARE PROVIDED "AS IS" NVIDIA MAKES
// NO REPRESENTATIONS, WARRANTIES, EXPRESSED, IMPLIED, STATUTORY, OR OTHERWISE WITH RESPECT TO
// THE MATERIALS, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES OF NONINFRINGEMENT,
// MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.
//
// NVIDIA CORPORATION & AFFILIATES assumes no responsibility for the consequences of use of such
// information or for any infringement of patents or other rights of third parties that may
// result from its use. No license is granted by implication or otherwise under any patent
// or patent rights of NVIDIA CORPORATION & AFFILIATES. No third party distribution is allowed unless
// expressly authorized by NVIDIA. Details are subject to change without notice.
// This code supersedes and replaces all information previously supplied.
// NVIDIA CORPORATION & AFFILIATES products are not authorized for use as critical
// components in life support devices or systems without express written approval of
// NVIDIA CORPORATION & AFFILIATES.
//
// SPDX-FileCopyrightText: Copyright (c) 2022 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
// SPDX-License-Identifier: LicenseRef-NvidiaProprietary
//
// NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
// property and proprietary rights in and to this material, related
// documentation and any modifications thereto. Any use, reproduction,
// disclosure or distribution of this material and related documentation
// without an express license agreement from NVIDIA CORPORATION or
// its affiliates is strictly prohibited.
//
/////////////////////////////////////////////////////////////////////////////////////////

#ifndef DW_FRAMEWORK_SERIAL_STR_TYPE_MAP_HPP_
#define DW_FRAMEWORK_SERIAL_STR_TYPE_MAP_HPP_

#include <dwcgf/Types.hpp>
#include <dw/core/container/HashContainer.hpp>
#include <dw/core/container/VectorFixed.hpp>

namespace dw
{
namespace framework
{

#define SERIAL_STR_TYPE_MAP(t) \
    {                          \
        #t, t                  \
    }

const dw::core::StaticHashMap<dw::core::FixedString<64>,
                              dwSerializationType,
                              dwSerializationType::DW_TYPES_COUNT - 1> // ignore DW_TYPE_INVALID and DW_TYPES_COUNT
    dwSerializationTypeStringToEnumMap = {
        SERIAL_STR_TYPE_MAP(DW_ACTUATION_SUPERVISOR_STATUS),
        SERIAL_STR_TYPE_MAP(DW_ACTUATED_REPLAY_STATUS),
        SERIAL_STR_TYPE_MAP(DW_ADAS_OBJECT_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_AEB_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_AEB_STATE_INFO),
        SERIAL_STR_TYPE_MAP(DW_AV_STATS),
        SERIAL_STR_TYPE_MAP(DW_AV_CONFIG),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_ACC_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_LANE_CHANGE_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_LANE_HANDLE_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_MERGE_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_WAIT_ELEMENT_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_DEBUG_INFO),
        SERIAL_STR_TYPE_MAP(DW_BEHAVIOR_PLANNER_EVALUATION_RESULTS),
        SERIAL_STR_TYPE_MAP(DW_CALIBRATED_STEER_OFFSET),
        SERIAL_STR_TYPE_MAP(DW_CALIBRATED_WHEEL_RADII),
        SERIAL_STR_TYPE_MAP(DW_BLINDNESS_DETECTION_OUTPUT),
        SERIAL_STR_TYPE_MAP(DW_CALIBRATION),
        SERIAL_STR_TYPE_MAP(DW_COMMAND_TO_CONTROL),
        SERIAL_STR_TYPE_MAP(DW_CUBOID_3D),
        SERIAL_STR_TYPE_MAP(DW_CVIP_LIST),
        SERIAL_STR_TYPE_MAP(DW_DISENGAGEMENT_DATA),
        SERIAL_STR_TYPE_MAP(DW_EGOMOTION_RESULT_PAYLOAD),
        SERIAL_STR_TYPE_MAP(DW_EGOMOTION_STATE_HANDLE),
        SERIAL_STR_TYPE_MAP(DW_ENCODED_FRAME),
        SERIAL_STR_TYPE_MAP(DW_EVENT_FLAG),
        SERIAL_STR_TYPE_MAP(DW_EVENT_SURVEY),
        SERIAL_STR_TYPE_MAP(DW_FEATURE_NCC_SCORES),
        SERIAL_STR_TYPE_MAP(DW_FEATURE_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_FEATURE_HISTORY_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_FREESPACE_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_GLOBAL_EGOMOTION_RESULT_PAYLOAD),
        SERIAL_STR_TYPE_MAP(DW_GLOBAL_EGOMOTION_STATE),
        SERIAL_STR_TYPE_MAP(DW_GPS_FRAME),
        SERIAL_STR_TYPE_MAP(DW_HEARTBEAT),
        SERIAL_STR_TYPE_MAP(DW_IMAGE_HANDLE),
        SERIAL_STR_TYPE_MAP(DW_IMU_FRAME),
        SERIAL_STR_TYPE_MAP(DW_INTERSECTION_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_INTERSECTION_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_KPI_STATUS),
        SERIAL_STR_TYPE_MAP(DW_LANE_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_LANE_ASSIGNMENT_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_LANE_CHUNK_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_LANE_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_LANE_GRAPH),
        SERIAL_STR_TYPE_MAP(DW_LANE_GRAPH_LIST),
        SERIAL_STR_TYPE_MAP(DW_LANE_GRAPH_WORLD_MODEL),
        SERIAL_STR_TYPE_MAP(DW_LANE_PLAN_ACTIONS),
        SERIAL_STR_TYPE_MAP(DW_LANE_PLAN_ACTIONS_NEW),
        SERIAL_STR_TYPE_MAP(DW_LANE_SUPPORT_STATUS),
        SERIAL_STR_TYPE_MAP(DW_LANDMARK_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_ROADMARK_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_EGO_LANE_BIASING_INFO),
        SERIAL_STR_TYPE_MAP(DW_ROAD_SEPARATION),
        SERIAL_STR_TYPE_MAP(DW_LIGHT_SOURCE_PERCEPTION_AUTO_BEAM_STATUS),
        SERIAL_STR_TYPE_MAP(DW_LIGHT_SOURCE_PERCEPTION_DETECTOR_MASK),
        SERIAL_STR_TYPE_MAP(DW_LIGHT_FUNCTIONS_DATA),
        SERIAL_STR_TYPE_MAP(DW_LIDAR_DECODED_PACKET),
        SERIAL_STR_TYPE_MAP(DW_LSS_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_LDW_HMI_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_LOCALIZATION_RESULT),
        SERIAL_STR_TYPE_MAP(DW_LOCALIZATIONNAVMAP_RESULT),
        SERIAL_STR_TYPE_MAP(DW_LOGIN_SURVEY),
        SERIAL_STR_TYPE_MAP(DW_MSG_VERSION),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_CAMERA),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_FUSED),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_GENERIC),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_HISTORY_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_LIDAR),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_RADAR),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_FUSION_RUN_METADATA),
        SERIAL_STR_TYPE_MAP(DW_OBJECT_ARRAY_RADARDNN),
        SERIAL_STR_TYPE_MAP(DW_OBSTACLE),
        SERIAL_STR_TYPE_MAP(DW_OBSTACLE_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_OBSTACLE_LINK_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_OBSTACLE_RDM),
        SERIAL_STR_TYPE_MAP(DW_PARK_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_PATH),
        SERIAL_STR_TYPE_MAP(DW_PATH_DETECTION),
        SERIAL_STR_TYPE_MAP(DW_TEMPORAL_FUSION_DEBUG_INFO),
        SERIAL_STR_TYPE_MAP(DW_PERCEPTION_OBJECT),
        SERIAL_STR_TYPE_MAP(DW_PYRAMID_IMAGE),
        SERIAL_STR_TYPE_MAP(DW_DEPTH_IMAGE),
        SERIAL_STR_TYPE_MAP(DW_POINT_CLOUD),
        SERIAL_STR_TYPE_MAP(DW_RADAR_SCAN),
        SERIAL_STR_TYPE_MAP(DW_RADAR_TRACK_EXTENDED),
        SERIAL_STR_TYPE_MAP(DW_RESIM_CONFIG),
        SERIAL_STR_TYPE_MAP(DW_RESIM_FAILURE),
        SERIAL_STR_TYPE_MAP(DW_RESIM_LOG),
        SERIAL_STR_TYPE_MAP(DW_RESIM_METADATA_LOG),
        SERIAL_STR_TYPE_MAP(DW_RESIM_SEGMENT_LOG),
        SERIAL_STR_TYPE_MAP(DW_SAFETY_FORCE_FIELD_METRIC),
        SERIAL_STR_TYPE_MAP(DW_SAFETY_FORCE_FIELD_STATE),
        SERIAL_STR_TYPE_MAP(DW_MATCHED_ROUTE),
        SERIAL_STR_TYPE_MAP(DW_LARGE_LANE_GRAPH_REWARD_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_LARGE_LANE_GRAPH_LINK_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_SENSOR_NODE_RAW_DATA),
        SERIAL_STR_TYPE_MAP(DW_STRATEGY_HEALTH_STATE),
        SERIAL_STR_TYPE_MAP(DW_SURROUND_MONITOR_RADAR_STATE),
        SERIAL_STR_TYPE_MAP(DW_SURROUND_MONITOR_LANECHANGE_SAFEDECISION),
        SERIAL_STR_TYPE_MAP(DW_RADAR_PERCEPTION_RADAR_STATE),
        SERIAL_STR_TYPE_MAP(DW_SURVEY_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_TEXT),
        SERIAL_STR_TYPE_MAP(DW_TELEMETRY_SESSION),
        SERIAL_STR_TYPE_MAP(DW_TIME),
        SERIAL_STR_TYPE_MAP(DW_TIME_SERIES),
        SERIAL_STR_TYPE_MAP(DW_TIME_SERIES_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_HEALTH_SIGNAL_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_GRAPH_HEALTH_SIGNAL),
        SERIAL_STR_TYPE_MAP(DW_TRAFFIC_SIGNAL_OBJECT_LIST),
        SERIAL_STR_TYPE_MAP(DW_TRANSFORMATION_PAYLOAD),
        SERIAL_STR_TYPE_MAP(DW_TSLOBJECTS),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_CALIBRATION),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_CONTROL_KPI),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_CONTROL_STATUS),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_IO_STATE),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_COMMAND),
        SERIAL_STR_TYPE_MAP(DW_VEHICLE_MISC_COMMAND),
        SERIAL_STR_TYPE_MAP(DW_WAIT_ELEMENT_GROUP),
        SERIAL_STR_TYPE_MAP(DW_WAIT_ELEMENT_GROUPS),
        SERIAL_STR_TYPE_MAP(DW_WAIT_LINE_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_CAMERA_PROPERTIES),
        SERIAL_STR_TYPE_MAP(DW_CAMERA_MODEL_TRANSFORM_PARAM),
        SERIAL_STR_TYPE_MAP(DW_SPEEDLIMIT_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_SPEEDLIMIT_LANE_ASSOCIATION_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_SPEEDLIMIT_POSITIONAL_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_TSA_PLANNER_HMI_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_BLIND_SPOT_MONITOR_STATE_INFO),
        SERIAL_STR_TYPE_MAP(DW_TSA_PLANNER_STATE_INFO),
        SERIAL_STR_TYPE_MAP(DW_NEAR_FIELD_ASSIST_STATE_INFO),
        SERIAL_STR_TYPE_MAP(DW_WAIT_ELEMENT_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_PREDICTED_TRAJECTORIES),
        SERIAL_STR_TYPE_MAP(DW_PARKING_SPACE_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_CODEC_PACKET),
        SERIAL_STR_TYPE_MAP(DW_SENSOR_TS_AND_ID),
        SERIAL_STR_TYPE_MAP(DW_AUTO_EMERGENCY_STEERING_REQUEST),
        SERIAL_STR_TYPE_MAP(DW_RECORDED_PATH),
        SERIAL_STR_TYPE_MAP(FLOAT32),
        SERIAL_STR_TYPE_MAP(DW_LANE_ASSIGNMENT_DEBUG_INFO),
        SERIAL_STR_TYPE_MAP(DW_TRAFFIC_LIGHTS_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_TEXT_REGION_ARRAY),
        SERIAL_STR_TYPE_MAP(DW_WC_VIEW_LINE_3D_ARRAY)};

#undef SERIAL_STR_TYPE_MAP

} // namespace framework
} // namespace dw

#endif // DW_FRAMEWORK_SERIAL_STR_TYPE_MAP_HPP_
