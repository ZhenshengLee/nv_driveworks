////////////////////////////////////////////////////////////////////////////////
// This code contains NVIDIA Confidential Information and is disclosed
// under the Mutual Non-Disclosure Agreement.
//
// Notice
// ALL NVIDIA DESIGN SPECIFICATIONS AND CODE ("MATERIALS") ARE PROVIDED "AS IS"
// NVIDIA MAKES NO REPRESENTATIONS, WARRANTIES, EXPRESSED, IMPLIED, STATUTORY,
// OR OTHERWISE WITH RESPECT TO THE MATERIALS, AND EXPRESSLY DISCLAIMS ANY
// IMPLIED WARRANTIES OF NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A
// PARTICULAR PURPOSE.
//
// NVIDIA Corporation assumes no responsibility for the consequences of use of
// such information or for any infringement of patents or other rights of third
// parties that may result from its use. No license is granted by implication or
// otherwise under any patent or patent rights of NVIDIA Corporation. No third
// party distribution is allowed unless expressly authorized by NVIDIA.  Details
// are subject to change without notice. This code supersedes and replaces all
// information previously supplied. NVIDIA Corporation products are not
// authorized for use as critical components in life support devices or systems
// without express written approval of NVIDIA Corporation.
//
// Copyright (c) 2016-2024 NVIDIA Corporation. All rights reserved.
//
// NVIDIA Corporation and its licensors retain all intellectual property and
// proprietary rights in and to this software and related documentation and any
// modifications thereto. Any use, reproduction, disclosure or distribution of
// this software and related documentation without an express license agreement
// from NVIDIA Corporation is strictly prohibited.
//
////////////////////////////////////////////////////////////////////////////////
#ifndef DWCGF_CORE_DWCGF_COMPUTEGRAPH_GRAPHHEALTHSIGNAL_H_
#define DWCGF_CORE_DWCGF_COMPUTEGRAPH_GRAPHHEALTHSIGNAL_H_
// Generated by dwProto from graph_health_signal.proto DO NOT EDIT BY HAND!
// See //3rdparty/shared/dwproto/README.md for more information

#include <stdbool.h>
#include <stdint.h>

#include <dw/core/health/HealthSignals.h>

#ifdef __cplusplus
extern "C" {
#endif

/// The maximum length of the "source" string for a signal
#define DW_NODE_STATE_MAX_ERROR_STRING_LENGTH 256U

/// @brief Basic error signal that gets reported only when there is an error
// coverity[misra_c_2012_rule_2_4_violation]
typedef struct dwGraphErrorSignal
{
    /// the PID that the node is executing in
    uint32_t processId;

    /// Source is a string with the processName.NodeName.PassName format
    /// This is set at runtime by the process executing the node.
    char8_t source[DW_NODE_STATE_MAX_ERROR_STRING_LENGTH];

    /// the DW error signal
    // coverity[cert_dcl37_c_violation]
    // coverity[misra_c_2012_rule_21_2_violation]
    dwErrorSignal signal;

    /// silenced from sending to seh
    bool silenced;

    /// iteration count
    uint32_t iterationCount;
} dwGraphErrorSignal;

/**
 * @brief Basic health signal that describes the health status of the graph
 */
// coverity[misra_c_2012_rule_2_4_violation]
typedef struct dwGraphHealthSignal
{
    /// the PID that the node is executing in
    uint32_t processId;

    /// Source is a string with the processName.NodeName.PassName format
    /// This is set at runtime by the process executing the node.
    char8_t source[DW_NODE_STATE_MAX_ERROR_STRING_LENGTH];

    /// The DW health signal
    // coverity[cert_dcl37_c_violation]
    // coverity[misra_c_2012_rule_21_2_violation]
    dwHealthSignal signal;

    /// iteration count
    uint32_t iterationCount;
} dwGraphHealthSignal;

/// @brief Represents an array of health signals
// coverity[misra_c_2012_rule_2_4_violation]
typedef struct dwGraphHealthSignalArray
{
    // coverity[cert_dcl37_c_violation]
    // coverity[misra_c_2012_rule_21_2_violation]
    dwGraphHealthSignal signal[DW_MAX_HEALTH_SIGNAL_ARRAY_SIZE];
    uint32_t count; //!< Stores the occupied/valid length of signal
} dwGraphHealthSignalArray;

#ifdef __cplusplus
}
#endif

#endif // DWCGF_CORE_DWCGF_COMPUTEGRAPH_GRAPHHEALTHSIGNAL_H_
